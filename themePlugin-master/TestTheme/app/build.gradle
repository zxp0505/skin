apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "com.example.ping.testtheme"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.0'
    testCompile 'junit:junit:4.12'
}
final def TARGET_SKIN_DIR = './skin-package/'
def skinName = "CrazyGold.skin"
task copySkinFileRelease {
    def dir = new File(TARGET_SKIN_DIR)
    if (!dir.exists()) {
        dir.mkdirs()
    }

    def f = new File(TARGET_SKIN_DIR + skinName)
    if (f.exists()) {
        f.delete()
    }

    copy {
        from('build/outputs/apk')
        into(TARGET_SKIN_DIR)
        include '*.apk'
        exclude '**/*-unaligned.apk'
        rename('themepackage-release-unsigned.apk', skinName)
    }

}


task copySkinFileDebug {

    def dir = new File(TARGET_SKIN_DIR)
    if (!dir.exists()) {
        dir.mkdirs()
    }

    def f = new File(TARGET_SKIN_DIR + skinName)
    if (f.exists()) {
        f.delete()
    }

    copy {
        from('build/outputs/apk')
        into(TARGET_SKIN_DIR)
        include '*.apk'
        exclude '**/*-unaligned.apk'
        rename('themepackage-debug.apk', skinName)
    }


}
copySkinFileDebug.dependsOn('assembleDebug')
copySkinFileRelease.dependsOn('assembleRelease')
